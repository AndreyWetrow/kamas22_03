{"version":3,"file":"static/js/174.40e239dd.chunk.js","mappings":"gLACA,EAA0B,yBAA1B,EAAkE,8BAAlE,EAAyG,wBAAzG,EAA0I,wBAA1I,EAA6K,0BAA7K,EAAiN,yB,mBCejN,EAZmB,SAACA,GAClB,OACE,iBAAKC,UAAWC,EAAiB,IAAMA,EAAvC,WACE,gBACEC,IAAI,sGACJC,IAAI,MAEN,SAAC,KAAD,CAASC,GAAE,UAAKL,EAAMM,IAAtB,SAA6BN,EAAMO,WCAzC,EARgB,SAACP,GACf,OACE,gBAAKC,UAAWC,EAAhB,UACE,0BAAOF,EAAMQ,a,UCLnB,EAAkC,yC,oBCqClC,EA5BuB,SAACR,GACtB,OACE,SAAC,KAAD,CACES,SAAUT,EAAMS,SAChBC,OAAQ,gBAAGC,EAAH,EAAGA,aAAH,OACN,iBAAMF,SAAUE,EAAhB,UACE,iBAAKV,UAAWC,EAAhB,WACE,SAAC,KAAD,CACEK,KAAK,iBACLK,UAAUC,EAAAA,EAAAA,IAAkBC,EAAAA,IAAUC,EAAAA,EAAAA,IAAU,MAFlD,SAIG,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACC,SAAC,IAAD,CACED,MAAOA,EACPC,KAAMA,EACNC,YAAY,mLAKlB,8CCiBZ,EAvCgB,SAAClB,IACAmB,EAAAA,EAAAA,MAAf,IACMC,EAAQpB,EAAMqB,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAACC,GACzC,OAAO,SAAC,EAAD,CAA4BlB,KAAMkB,EAAOlB,KAAMD,GAAImB,EAAOnB,IAAzCmB,EAAOnB,OAG3BoB,EAAmBN,EAAMO,SAASH,KAAI,SAAChB,GAC3C,OAAO,SAAC,EAAD,CAA0BA,QAASA,EAAQA,SAA7BA,EAAQF,OAc/B,OACE,iBAAKL,UAAWC,EAAhB,WACE,gBAAKD,UAAWC,EAAhB,SAAuCoB,KACvC,4BACE,gBAAKrB,UAAWC,EAAhB,SAAmCwB,KACnC,SAAC,EAAD,CACEE,qBAAsB5B,EAAM4B,qBAC5BC,YAAa7B,EAAM6B,YACnBC,eAAgB9B,EAAMqB,YAAYS,eAClCrB,SApBc,SAACsB,GACrBC,QAAQC,IAAIF,GACZ/B,EAAM6B,YAAYE,EAAOD,0B,mBCE7B,G,SAAeI,E,QAAAA,KACbC,EAAAA,EAAAA,KAnBsB,SAACf,GACvB,MAAO,CAAEC,YAAaD,EAAMC,gBAEH,SAACe,GAC1B,MAAO,CACLP,YAAa,SAACC,GACZM,GAASC,EAAAA,EAAAA,GAAmBP,SAYlC,CAGEQ,K","sources":["webpack://kamas22_03/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.js","components/Dialogs/Message/Message.js","webpack://kamas22_03/./src/components/Dialogs/MessageTextarea/MessageTextarea.module.css?6a36","components/Dialogs/MessageTextarea/MessageTextarea.js","components/Dialogs/Dialogs.js","components/Dialogs/DialogsContainer.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__LCPD3\",\"dialogsItems\":\"Dialogs_dialogsItems__4G+JT\",\"dialog\":\"Dialogs_dialog__ZwSGX\",\"active\":\"Dialogs_active__R2W5F\",\"messages\":\"Dialogs_messages__2AcnU\",\"message\":\"Dialogs_message__Vnwit\"};","import React from \"react\";\nimport classes from \"./../Dialogs.module.css\";\nimport { NavLink } from \"react-router-dom\";\n\nconst DialogItem = (props) => {\n  return (\n    <div className={classes.dialog + \" \" + classes.active}>\n      <img\n        src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQF1WOi1k9YWZk9192uuXZt2A7X4igjgpfavw&usqp=CAU\"\n        alt=\"\"\n      />\n      <NavLink to={`${props.id}`}>{props.name}</NavLink>\n    </div>\n  );\n};\n\nexport default DialogItem;\n","import React from \"react\";\nimport classes from \"./../Dialogs.module.css\";\n\nconst Message = (props) => {\n  return (\n    <div className={classes.message}>\n      <span>{props.message}</span>\n    </div>\n  );\n};\n\nexport default Message;\n","// extracted by mini-css-extract-plugin\nexport default {\"messageTextarea\":\"MessageTextarea_messageTextarea__HFHeI\",\"textarea\":\"MessageTextarea_textarea__Ij+fx\"};","import React from \"react\";\nimport { Form, Field } from \"react-final-form\";\nimport classes from \"./MessageTextarea.module.css\";\nimport {\n  composeValidators,\n  maxLength,\n  required,\n} from \"../../../utils/validators/validators\";\nimport { Textarea } from \"../../common/FormsControls/FormControls\";\n\nconst AddMessageForm = (props) => {\n  return (\n    <Form\n      onSubmit={props.onSubmit}\n      render={({ handleSubmit }) => (\n        <form onSubmit={handleSubmit}>\n          <div className={classes.messageTextarea}>\n            <Field\n              name=\"newMessageBody\"\n              validate={composeValidators(required, maxLength(100))}\n            >\n              {({ input, meta }) => (\n                <Textarea\n                  input={input}\n                  meta={meta}\n                  placeholder=\"Введите сообщение пользователю\"\n                />\n              )}\n            </Field>\n\n            <button>Send</button>\n          </div>\n        </form>\n      )}\n    />\n  );\n};\n\nexport default AddMessageForm;\n","import React, { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport classes from \"./Dialogs.module.css\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport MessageTextarea from \"./MessageTextarea/MessageTextarea\";\nimport AddMessageForm from \"./MessageTextarea/MessageTextarea\";\n\nconst Dialogs = (props) => {\n  let navigate = useNavigate();\n  const state = props.dialogsPage;\n\n  const dialogsElements = state.dialogs.map((dialog) => {\n    return <DialogItem key={dialog.id} name={dialog.name} id={dialog.id} />;\n  });\n\n  const messagesElements = state.messages.map((message) => {\n    return <Message key={message.id} message={message.message} />;\n  });\n\n  const addNewMessage = (values) => {\n    console.log(values);\n    props.sendMessage(values.newMessageBody);\n  };\n\n  // useEffect(() => {\n  //   if (props.isAuth) {\n  //     return navigate(\"/login\");\n  //   }\n  // });\n\n  return (\n    <div className={classes.dialogs}>\n      <div className={classes.dialogsItems}>{dialogsElements}</div>\n      <div>\n        <div className={classes.messages}>{messagesElements}</div>\n        <AddMessageForm\n          updateNewMessageBody={props.updateNewMessageBody}\n          sendMessage={props.sendMessage}\n          newMessageBody={props.dialogsPage.newMessageBody}\n          onSubmit={addNewMessage}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Dialogs;\n","import Dialogs from \"./Dialogs\";\nimport { sendMessageCreator } from \"../../redux/dialogs-reducer\";\nimport { connect } from \"react-redux\";\nimport { withAuthRedirect } from \"../../hoc/WithAuthRedirect\";\nimport { compose } from \"redux\";\n\nconst mapStateToProps = (state) => {\n  return { dialogsPage: state.dialogsPage };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    sendMessage: (newMessageBody) => {\n      dispatch(sendMessageCreator(newMessageBody));\n    },\n  };\n};\n\n// const AuthRedirectComponent = withAuthRedirect(Dialogs);\n//\n// const DialogsContainer = connect(\n//   mapStateToProps,\n//   mapDispatchToProps\n// )(AuthRedirectComponent);\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps)\n  // withAuthRedirect\n)(Dialogs);\n"],"names":["props","className","classes","src","alt","to","id","name","message","onSubmit","render","handleSubmit","validate","composeValidators","required","maxLength","input","meta","placeholder","useNavigate","state","dialogsPage","dialogsElements","dialogs","map","dialog","messagesElements","messages","updateNewMessageBody","sendMessage","newMessageBody","values","console","log","compose","connect","dispatch","sendMessageCreator","Dialogs"],"sourceRoot":""}